// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TinyCrm.CrmDbContext;

namespace TinyCrm.Migrations
{
    [DbContext(typeof(TinyCrmDbContext))]
    partial class TinyCrmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TinyCrm.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalGross")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Created = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dob = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "TestCust1Name",
                            IsActive = false,
                            LastName = "TestCust1LastName",
                            TotalGross = 0m,
                            VatNumber = "123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            Created = new DateTime(2020, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dob = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "TestCust2Name",
                            IsActive = false,
                            LastName = "TestCust2LastName",
                            TotalGross = 0m,
                            VatNumber = "987654321"
                        },
                        new
                        {
                            CustomerId = 3,
                            Created = new DateTime(2020, 5, 6, 22, 51, 32, 696, DateTimeKind.Local).AddTicks(2986),
                            Dob = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "TestCust3Name",
                            IsActive = false,
                            LastName = "TestCust3LastName",
                            TotalGross = 0m,
                            VatNumber = "123654789"
                        });
                });

            modelBuilder.Entity("TinyCrm.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "TestProd1",
                            Price = 20.0m,
                            ProductCategory = "games"
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "TestProd2",
                            Price = 40.0m,
                            ProductCategory = "games"
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "TestProd3",
                            Price = 150.0m,
                            ProductCategory = "technology"
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "TestProd4",
                            Price = 60.0m,
                            ProductCategory = "software"
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "TestProd5",
                            Price = 45.0m,
                            ProductCategory = "gadgets"
                        },
                        new
                        {
                            ProductId = 6,
                            Name = "TestProd6",
                            Price = 100.0m,
                            ProductCategory = "hardware"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
